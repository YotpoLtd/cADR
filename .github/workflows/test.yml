name: Test

on:
  push:
    branches: ['**']
  pull_request:
    branches: [master, main]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node-version: [20.x, 22.x]

    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'
      
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      
      - name: Build CLI package
        run: |
          echo "Building CLI package..."
          cd packages/cli
          yarn build
          echo "CLI package built successfully"
          ls -la dist/
      
      - name: Verify build
        run: |
          echo "Verifying CLI dist files exist..."
          ls -la packages/cli/dist/ || echo "CLI dist not found"
          echo "Testing CLI execution..."
          node packages/cli/bin/cadr.js --help || echo "CLI help test completed"
      
      - name: Lint
        run: yarn lint
      
      - name: Test
        run: yarn test --coverage
      
      - name: Test package installation
        run: |
          set -ex
          echo "Creating CLI package tarball..."
          CLI_TGZ=$(yarn pack --cwd packages/cli)
          echo "Created CLI: $CLI_TGZ"
          
          echo "Installing CLI package globally..."
          yarn global add "$CLI_TGZ"
          
          echo "Verifying installation..."
          yarn global list | grep cadr-cli || echo "Package not found in global list"
          
          echo "Checking yarn bin directory..."
          echo "yarn global bin: $(yarn global bin)"
          ls -la "$(yarn global bin)" | grep cadr || echo "cadr not found in bin directory"
          
          echo "Testing cadr command..."
          which cadr || echo "cadr not in PATH"
          cadr
          
          echo "Package installation test passed!"
        shell: bash
      
      - name: Upload coverage
        uses: codecov/codecov-action@v3
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == '20.x'
        continue-on-error: true
        with:
          files: ./coverage/lcov.info
          fail_ci_if_error: false

