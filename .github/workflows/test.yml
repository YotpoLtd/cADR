name: Test

on:
  push:
    branches: ['**']
  pull_request:
    branches: [master, main]

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Allow pushing coverage updates

    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0  # Fetch all history for proper git operations
      
      - name: Setup Node.js 22.x
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'yarn'
      
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      
      - name: Build CLI package
        run: |
          echo "Building CLI package..."
          cd packages/cli
          yarn build
          echo "CLI package built successfully"
          ls -la dist/
      
      - name: Verify build
        run: |
          echo "Verifying CLI dist files exist..."
          ls -la packages/cli/dist/ || echo "CLI dist not found"
          echo "Testing CLI execution..."
          node packages/cli/dist/index.js --help || echo "CLI help test completed"
      
      - name: Lint
        run: yarn lint
      
      - name: Test
        run: yarn test --coverage
      
      - name: Update coverage in README
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        run: node .github/scripts/update-coverage.js
      
      - name: Commit coverage updates
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add README.md
          git diff --quiet && git diff --staged --quiet || git commit -m "chore: update coverage badge and report [skip ci]"
          git push
      
      - name: Upload coverage reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: |
            coverage/
            !coverage/**/*.json
          retention-days: 30
      
      - name: Test package installation
        run: |
          set -ex
          echo "Creating CLI package tarball..."
          CLI_TGZ=$(yarn pack --cwd packages/cli 2>&1 | grep "Wrote tarball to" | sed 's/.*"\(.*\)".*/\1/')
          echo "Created CLI: $CLI_TGZ"
          
          echo "Installing CLI package globally..."
          yarn global add "$CLI_TGZ"
          
          echo "Testing cadr command..."
          cadr --help || echo "CLI help test completed"
          
          echo "Package installation test passed!"

